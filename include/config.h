#ifndef _BASIC_GAME_CONSTANTS_H_
#define _BASIC_GAME_CONSTANTS_H_

#define _USE_MATH_DEFINES

#include <math.h>
#include "btBulletDynamicsCommon.h"

const int COORDINATE_DIMENSIONS = 3;
const int TEXTURE_COORDINATE_DIMENSIONS = 2;
const int NORMAL_VECTOR_COORIDINATES_DIMENSIONS = 3;
const int DIFFUSE_COLOR_DIMENSIONS = 4;
const int SPECULAR_COLOR_DIMENSIONS = 4;
const int VERTEX_ATTRIBUTE_NUMBER = COORDINATE_DIMENSIONS + TEXTURE_COORDINATE_DIMENSIONS + 
	NORMAL_VECTOR_COORIDINATES_DIMENSIONS + DIFFUSE_COLOR_DIMENSIONS + SPECULAR_COLOR_DIMENSIONS;
enum vertexAttributeIndices {COORDINATES, TEX_COORD, SURFACE_NORMAL, COLOR_DIFFUSE, COLOR_SPECULAR};
const btVector3 WORLD_GRAVITY(0, -9.80665, 0);
const int triangle_corners_per_square = 6;
const float CAMERA_RELATIVE_SHIFT = 0.95;
enum objectID {
	PHYSICAL_BODY = 0b1,
	PLAIN_OBJECT = 0b10,
	BOUNDED_PLANE = 0b100, 
	GAME_OBJECT_3D = 0b1000, 
	PLAYER = 0b10000,
	ENEMY = 0b100000
};
const float PLAYER_SPEED = 6.f;
const float PLAYER_SPEED_WHEN_JUMPING = 2.f;
const float MOUSE_SESETIVITY = 0.001f;
const float PLAYER_JUMP_VELOCTY = 10.f;
const float MIN_ANGLE_OF_SURFACE_TO_JUMP = M_PI / 4.f; // 45 degrees
const float PERIOD_OF_REST_AFTER_JUMP = 1500.f; // milliseconds
const float PLAYER_CAM_DOWN_SHIFT_AFTER_GROUNDING = 0.1f;

const float ENEMYS_FOV = M_PI / 3.f; // 60 deg.
const float HALF_FOV = ENEMYS_FOV / 2.f;
const float ENEMYS_MAX_VIEW_DIST = 30.f;
const int   ENEMYS_KILL_DEATH_RATIO = 10000;
#endif // !_BASIC_GAME_CONSTANTS_H_
